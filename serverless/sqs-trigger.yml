resources:
  Resources:
    TriggerQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:service}-dev-trigger
        MessageRetentionPeriod: 120
        # KmsMasterKeyId: alias/aws/sqs
        # https://stackoverflow.com/questions/63808647/aws-forward-event-bridge-event-to-encrypted-sqs-amazon-managed-key
    TriggerQueuePolicy:
      Type: AWS::SQS::QueuePolicy
      Properties:
        Queues:
          - Ref: TriggerQueue
        PolicyDocument:
          Statement:
            - Effect: Allow
              Principal:
                Service: sns.amazonaws.com
              Action: sqs:SendMessage
              Resource:
                Fn::GetAtt: [ TriggerQueue, Arn ]
              Condition:
                ArnEquals:
                  aws:SourceArn:
                    Ref: Topic

    TriggerToTriggerQueue:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service: lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: TriggerToTriggerQueuePolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - sqs:SendMessage
                  Resource:
                    Fn::GetAtt: [TriggerQueue, Arn]

    TriggerSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Protocol: sqs
        Endpoint:
          Fn::GetAtt: [ TriggerQueue, Arn ]
        TopicArn:
          Ref: Topic

  Outputs:
    TriggerQueue:
      Value:
        Ref: TriggerQueue
      Export:
        Name: TriggerQueue
    TriggerQueueArn:
      Value:
        Fn::GetAtt: [ TriggerQueue, Arn ]
      Export:
        Name: TriggerQueueArn
